#include<windows.h>
#include <GL/glut.h>
#include <stdlib.h>

static GLfloat spin = 0;

void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);

	glPushMatrix();
//pentagon
    glColor3f(1.0, 0.0, 0.0);
	glBegin(GL_POLYGON);

	glVertex2f(2,2);
	glVertex2f(10,2);
	glVertex2f(10,8);
	glVertex2f(6,12);
	glVertex2f(2,8);

	glEnd();
	glPopMatrix();

	glPushMatrix();
	glTranslatef(0,-10,0);
    glColor3f(0.0, 1.0, 0.0);
 // rectangle

	glBegin(GL_POLYGON);
	glVertex2f(2,2);
	glVertex2f(10,2);
	glVertex2f(10,8);
	glVertex2f(2,8);
	glEnd();
	glPopMatrix();



	glPushMatrix();
	glTranslatef(0,-20,0);
    glColor3f(0.0, 1.0, 0.0);
//hexagon
	glBegin(GL_POLYGON);
	glVertex2f(2,2);
	glVertex2f(10,2);
	glVertex2f(13,5);
	glVertex2f(10,8);
	glVertex2f(2,8);
	glVertex2f(-1,5);
	glEnd();
	glPopMatrix();


	glPushMatrix();
	glTranslatef(0,20,0);
    glColor3f(0.0, 1.0, 0.0);
//triangles
	glBegin(GL_TRIANGLES);
	glVertex2f(0,2);
	glVertex2f(6,2);
	glVertex2f(3,6);
	glEnd();
	glPopMatrix();


    glPushMatrix();
	glTranslatef(-20,20,0);
    glColor3f(0.0, 1.0, 0.0);
//parallelogram
	glBegin(GL_POLYGON);
	glVertex2f(0,2);
	glVertex2f(10,2);
	glVertex2f(14,10);
	glVertex2f(4,10);
	glEnd();
	glPopMatrix();


    glPushMatrix();
	glTranslatef(-35,20,0);
    glColor3f(0.0, 1.0, 0.0);
//square
	glBegin(GL_POLYGON);
	glVertex2f(0,2);
	glVertex2f(10,2);
	glVertex2f(10,10);
	glVertex2f(0,10);
	glEnd();
	glPopMatrix();


    glPushMatrix();
	glTranslatef(-35,-20,0);
    glColor3f(0.0, 1.0, 0.0);
//octagon
	glBegin(GL_POLYGON);
	glVertex2f(0,2);
	glVertex2f(6,2);
	glVertex2f(8,4);
	glVertex2f(8,8);
	glVertex2f(6,10);
	glVertex2f(0,10);
	glVertex2f(-2,8);
	glVertex2f(-2,4);

	glEnd();
	glPopMatrix();



	 glPushMatrix();
	glTranslatef(-20,-30,0);
    glColor3f(0.0, 1.0, 0.0);
//trapez
	glBegin(GL_POLYGON);
	glVertex2f(0,2);
	glVertex2f(10,2);
	glVertex2f(8,10);
	glVertex2f(2,10);


	glEnd();
	glPopMatrix();









	glFlush();
}




int main()
{
	glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize (500, 500);
	glutInitWindowPosition (100, 100);
	glutCreateWindow ("Line");
	glClearColor (0.0, 0.0, 1.0, 0.0);
	glOrtho(-50.0, 50.0, -50.0, 50.0, -1.0, 1.0);
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;
}

